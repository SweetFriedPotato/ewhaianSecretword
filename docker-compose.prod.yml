version: "3.9"

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ewhaian-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./certbot:/var/www/certbot:ro
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    depends_on:
      - frontend
      - app
    restart: always
    networks:
      - ewha_network
    command: /bin/sh -c "envsubst '$$DOMAIN_NAME' < /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.tmp && mv /etc/nginx/nginx.conf.tmp /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ewhaian-frontend
    expose:
      - "3000"
    restart: always
    networks:
      - ewha_network

  # Backend (Node.js)
  app:
    build:
      context: ../ewhaianSecretword_back
      dockerfile: Dockerfile
    container_name: ewhaian-app
    expose:
      - "3001"
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - SECRET_WORD_FOR_REGISTER=${SECRET_WORD_FOR_REGISTER}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "node init_db.js && node index.js"
    networks:
      - ewha_network

  # Database (PostgreSQL)
  db:
    image: postgres:15
    container_name: ewhaian-db
    ports:
      - "127.0.0.1:5432:5432"
    env_file:
      - ../ewhaianSecretword_back/.env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../ewhaianSecretword_back/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - ewha_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  postgres_data:

networks:
  ewha_network:
    driver: bridge
